trigger:
- develop

variables:
    DotNetVersion: 7.0.x
    solution: '$(Build.SourcesDirectory)/caminho-completo-da-sua-solucao-com-barra-de-dastas/SUA_SOLUCAO.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
    version: '$(VERSAOPADRAO).$(Build.BuildId)'

stages:

- stage: Build_NOME_SEU_PROJETO
  jobs:
  - job: Build_Droid_iOS
    displayName: Build NOME_SEU_PROJETO
    pool:
      vmImage: 'macOS-12'
      demands:
      - MSBuild
      
    steps:
    
    # Install .NET SDKs  
    - task: UseDotNet@2
      displayName: Install .NET SDK
      inputs:
        packageType: 'sdk'
        version: '$(DotNetVersion)'
        includePreviewVersions: false

    # Install Java SDK for Android
    - task: JavaToolInstaller@0
      displayName: Install Java SDK
      inputs:
        versionSpec: '11'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    # Install all workloads your solution is supported
    - powershell: dotnet workload install maui-android maui-ios maccatalyst
      displayName: Install .NET MAUI Workload

    - task: Bash@3
      displayName: Restore nuget
      inputs:
        targetType: 'inline'
        script: |
          dotnet restore SUA_SOLUCAO.sln
    
    ###BUILD DO ANDROID NO MESMO AMBIENTE###
    - task: android-manifest-version@1
      displayName: Altera a vers√£o da build AndroidManifest.xml
      inputs:
        sourcePath: '$(Build.SourcesDirectory)/src/MobileApp/NOME_SEU_PROJETO/Platforms/Android/AndroidManifest.xml'
        versionCodeOption: 'timestamp'
        versionName: '$(version)'
        printFile: true

    - task: Bash@3
      displayName: Build Android App
      inputs:
        targetType: 'inline'
        script: |
          dotnet build NOME_SEU_PROJETO-Stock-MobileApp.sln -f net7.0-android -c Release -p:AndroidPackageFormat=aab
    - task: AndroidSigning@3
      inputs:
        apkFiles: '**/*.aab'
        apksignerKeystoreFile: 'SUA_KEYSTORE.keystore'
        apksignerKeystorePassword: '$(KEYSTOREPASS)'
        apksignerKeystoreAlias: 'SEU_ALIAS_DA_KEYSTORE'
        apksignerKeyPassword: '$(KEYSTOREPASS)'
        apksignerArguments: '--verbose  --min-sdk-version 31'

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(system.defaultworkingdirectory)'
        contents: '**/*.aab'
        targetFolder: '$(Build.ArtifactStagingDirectory)/build/'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
    
    ###BUILD DO IOS NO MESMO AMBIENTE###
    - task: InstallAppleCertificate@2
      displayName: Instala Certificado Apple
      inputs:
        certSecureFile: 'NOME_SEU_PROJETO.p12'
        certPwd: '$(iOSCertPassword)'
        keychain: 'temp'

    - task: InstallAppleProvisioningProfile@1
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: 'NOME_SEU_PROJETO.mobileprovision'

    - task: ios-bundle-version@1
      inputs:
        sourcePath: '$(Build.SourcesDirectory)/caminho-do-info-plist-do-ios/Info.plist'
        versionCodeOption: 'timestamp'
        versionName: '$(version)'
        printFile: true

    - task: ios-bundle-identifier@1
      inputs:
        sourcePath: '$(Build.SourcesDirectory)/caminho-do-info-plist-do-ios/Info.plist'
        bundleIdentifier: 'com.br.IDENTIFICADOR_SEU_PROJETO'
        bundleName: 'NOME_SEU_PROJETO'
        bundleDisplayName: 'NOME_SEU_PROJETO'
        printFile: true

    - task: Bash@3
      displayName: Build iOS App
      continueOnError: true
      inputs:
        targetType: 'inline'
        script: |
          dotnet publish SUA_SOLUCAO.sln -f:net7.0-ios -c:Release /p:RunAOTCompilation=true /p:EnableAggressiveTrimming=true  /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false --runtime ios-arm64 --self-contained  /p:Codesignkey='$(APPLE_CERTIFICATE_SIGNING_IDENTITY)' /p:CodesignProvision='$(APPLE_PROV_PROFILE_UUID)'

    - task: CopyFiles@2
      inputs:
        Contents: |
          **/*.app
          **/*.ipa
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop_ios'
        publishLocation: 'Container'
